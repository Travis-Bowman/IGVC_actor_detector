#!/usr/bin/env python3

PACKAGE = "object_detection"

from math import pi
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("position_decay", double_t, 0, "Position smoothing decay coefficient", 0.1, 0, 1)
gen.add("speed_decay", double_t, 0, "Speed smoothing decay coefficient", 0.5, 0, 1)
gen.add("size_decay", double_t, 0, "Size smoothing decay coefficient", 0.1, 0, 1)
gen.add("speed_weight", double_t, 0, "Weight of speed in comparison metric", 2, 0, 10)
gen.add("metric_threshold", double_t, 0, "Maximum comparison metric value for a link to be considered", 3, 0, 100)

gen.add("camera_x", double_t, 0, "X offset of camera from origin", 0, -10, 10)
gen.add("camera_y", double_t, 0, "Y offset of camera from origin", -0.1, -10, 10)
gen.add("camera_z", double_t, 0, "Z offset of camera from origin", 1, -10, 10)
gen.add("hfov", double_t, 0, "Camera horizontal FOV", 1.15366, 0, 2*pi)
gen.add("vfov", double_t, 0, "Camera vertical FOV", 0.886627, 0, 2*pi)
gen.add("x_roll", double_t, 0, "Angle to rotate pointcloud about X axis", -0.0430699, -pi/2, pi/2)
gen.add("y_roll", double_t, 0, "Angle to rotate pointcloud about Y axis", 0.00596964, -pi/2, pi/2)
gen.add("center_yaw", double_t, 0, "Frame center yaw angle", -1.15, -pi, pi)
gen.add("center_pitch", double_t, 0, "Frame center pitch angle", -0.165, -pi, pi)
gen.add("min_radius", double_t, 0, "Minimum distance to consider", 0, 0, 300)
gen.add("max_radius", double_t, 0, "Maximum distance to consider", 100, 0, 300)
gen.add("min_height", double_t, 0, "Minimum height to consider", -10, -100, 100)
gen.add("max_height", double_t, 0, "Maximum height to consider", 10, -100, 100)
gen.add("zero_height", double_t, 0, "Ground height offset", -1.213, -100, 100)

exit(gen.generate(PACKAGE, "detection_reporter_node", "Detection"))
